@model Dictionary<string, List<string>>

@{
    bool horizontal = ((bool)(ViewContext.RouteData.Values["horizontalNav"] ?? false));
    string wrapperClasses = horizontal ? "btn-group btn-group-sm btn-group-justified" : null;
}


<link href="~/Content/flex-menu.css" rel="stylesheet" />

<div class="@wrapperClasses">
    @foreach (var category in Model)
    {
    <div class="dropdown">
        @{
            string input_id = category.Key + "-menu-toggle";
        }
        <input class="menu-toggle" id="@input_id" type="checkbox" />
        <label for="@input_id" class="dropdown-name" style="font-weight: normal; flex-direction: column">
            <span style="width: 100%; display: flex; justify-content: space-between;">
                <span class="dropdown-toggle">
                    @category.Key
                </span>
                <svg width="25" height="25" viewBox="0 0 24 24" fill="none" stroke="#000000" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M5 8 L12 20 L19 8" />
                </svg>
            </span>
            <span class="drop-menu">
                @foreach (var subcategory in category.Value)
                {
                    @*@Html.RouteLink(subcategory, new
                    {
                        controller = "Product",
                        action = "List",
                        category = subcategory,
                        page = 1
                    //}, new { @class = "dropdown-item btn btn-block btn-default btn-lg"})
                    }, new { @class = "" })*@

                    <a href="@Url.Action("List", "Product", new { category = subcategory, page = 1 })" class="dropdown-item">@subcategory</a>
                }
            </span>
        </label>

    </div>
    }
</div>